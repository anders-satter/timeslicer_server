@startuml
'scale 350 height
skinparam shadowing false
'skinparam class {
'	ClassFontSize 17
'	ActorFontName Monaco
'	
'}

title General Application Architecture

class User << (U,#FF7700)  >>
class "DeliveryMechanism"  as DM << (D,lightblue)  >> {
	validateInput()
	createDataStructure
}
note right of DM 
	The delivery mechanism is responsible
	for validation and construction of 
	input to the request data model, 
	ie as an argument list or an object 
	to send into it. The input should be 
	delivery mechanism and framework agnostic!
	(as the input boundary is)
	
	It is also responible for presenting the
	data via a presenter object
	
end note
interface "InBoundary" as IB 
interface "OutBoundary" as OB
class "Interactor" as IA
note right of IA
	responsible for the
	application business rules
	You should be able to test all. 
	this without starting the 
	web server
end note
class "Entity1" as E1
class "Entity2" as E2
class "Entity3" as E3
class "Result\nModel" as ResM {
	responseData1
	responseData2
	...
}

class "Request\nModel" as ReqM {
	requestData1
	requestData2
	...
} 


'interface InBoundary << (T,#FF7700)  >>

User <-> DM
DM -down-> ReqM
DM -down-|> OB
DM -down-> IB
DM -down-> ResM


IB -left-> ReqM
IA -up-> ReqM
IB <|.down. IA
OB <.down. IA
'IA .up.> OB
OB -right-> ResM
IA -up-> ResM

IA --> E1
IA --> E2
IA --> E3

@enduml